import random

suits = ('hearts','spades','diamond','clubs')

ranks = ('two','three','four','five','six','seven','eight','nine','ten','jack','queen','king','ace')

values = {'two':2, 'three':3,'four':4,'five':5,'six':6,'seven':7,'eight':8,'nine':9,'ten':10,'jack':11,
          'queen':12,'king':13,'ace':14}
          
class Card:
    
    def __init__(self,suit,rank):
        self.suit = suit
        self.rank = rank
        self.value = values[rank]
        
    def __str__(self):
        return self.rank + " of " + self.suit
    
class Deck:
    
    def __init__(self):
        
        self.all_cards = []
        
        for suit in suits:
            for rank in ranks:
                created_cards = Card(suit,rank)
                self.all_cards.append(created_cards)
                
    def shuffle(self):
        random.shuffle(self.all_cards)
        
    def deal_one(self):
        return self.all_cards.pop()
        
        
class Player:
    
    def __init__(self,name):
        self.name = name
        self.all_cards = []
        
    def remove_one(self):
        return self.all_cards.pop(0)
    
    def add_cards(self,new_cards):
        if type(new_cards) == type([]):
            self.all_cards.extend(new_cards)
        else:
            self.all_cards.append(new_cards)
            
    def __str__(self):
        return f"Player {self.name} has {len(self.all_cards)} cards"

player_one = Player('one')
player_two = Player('two')

new_deck = Deck()
new_deck.shuffle()

for i in range(26):
    player_one.all_cards.append(new_deck.deal_one())
    player_two.all_cards.append(new_deck.deal_one())
    
game_on = True

round_num = 0

while game_on:
    
    round_num += 1
    print("Round: {}".format(round_num))
    
    if len(player_one.all_cards) == 0:
        print("Player one, out of cards!, Player two wins!")
        game_on = False
        break
        
    if len(player_two.all_cards) == 0:
        print("Player two, out of cards!, Player one wins!")
        game_on = False
        break
    
    # START A NEW ROUND
    player_one_cards = []
    player_one_cards.append(player_one.remove_one())
    
    player_two_cards = []
    player_two_cards.append(player_two.remove_one())
    
    # AT WAR
    
    at_war = True
    
    while at_war:
        
        if player_one_cards[-1].value > player_two_cards[-1].value:
            
            player_one.add_cards(player_one_cards)
            player_one.add_cards(player_two_cards)
            
            at_war = False
            
        elif player_one_cards[-1].value < player_two_cards[-1].value:
            
            player_two.add_cards(player_two_cards)
            player_two.add_cards(player_one_cards)
            
            at_war = False
            
        else:
            
            print("WAR!")
            
            if len(player_one.all_cards) < 5:
                print("Player one has insufficient cards to declare war!")
                print("PLayer two has won!")
                game_on = False
                break
            
            elif len(player_two.all_cards) < 5:
                print("Player two has insufficient cards to declare war!")
                print("Player one has won!")
                game_on = False
                break
            
            for i in range(5):
                player_one_cards.append(player_one.remove_one())
                player_two_cards.append(player_two.remove_one())
